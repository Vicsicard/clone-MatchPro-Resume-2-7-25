{
              "bi_grams": "[John Smith, Senior Python, Python Developer, Machine Learning, Learning Engineer, LinkedIn linkedincom, Experienced Python, Python developer, solving complex, complex problems, building scalable, efficient systems, systems Proven, Proven ability, deliver high, high quality, quality software, budget Skilled, technologies including, including machine, machine learning, learning d, d ata, ata analysis, cloud computing, computing Seeking, challenging position, Machine Learning, Learning Engineer, Professional Experience, ABC Company, Senior Python, Python Developer, secure API, leading e, e commerce, commerce platf, platf orm, real time, time recommendation, recommendation system, collaborative filtering, fraud detection, detection system, machine learning, learning algorithms, XGBoos t, Random Forest, XYZ Corporation, Python Developer, machine learning, learning pipeline, customer retention, retention model, Python Scikit, data science, science models, Kub ernetes, real time, time chatbot, natural language, language processing, processing techniques, DEF Inc, Software Engineer, large scale, scale distributed, distributed system, leading financial, financial services, services company, P ython, data pipeline, processing large, large amounts, financial data, Apache Kafka, Apache Hadoop, time series, series forecasting, forecasting model, predicting stock, stock prices, Image Recognition, Convolutional Neural, Neural Networks, deep learning, learning model, image recognition, AWS Lambda, API Gateway, Fraud Detection, Graph Analytics, graph based, based algorithm, fraud detection, false positive, positive rate, previous rule, rule based, based system, Visu alized, Sentiment Analysis, Recurrent Neural, Neural Networks, sentiment analysis, analysis model, IMDb dataset, Recommendation System, Collaborative Filtering, collaborative filtering, filtering algorithm, movie recommendation, recommendation system, previous model, AWS SageMaker, Computer Science, Science XYZ, XYZ University, Computer Science, Science ABC, ABC University, Programming languages, languages Python, Python Java, Java C++, Machine learning, learning frameworks, frameworks Scikit, Scikit Learn, Learn TensorFlow, TensorFlow Keras, Keras PyTorch, Data processing, processing frameworks, frameworks Spark, Spark Hadoop, Hadoop Kafka, Cloud computing, computing AWS, AWS GCP, Databases SQL, SQL MongoDB, MongoDB Neo4j, Web frameworks, frameworks Django, Django Flask, Flask React]",
              "clean_data": "John Smith  \nSenior Python Developer and Machine Learning Engineer  \n \nEmail   \nLinkedIn linkedincom/in/johnsmith  \n \nSummary  \nExperienced Python developer with a passion for solving complex problems and building scalable and \nefficient systems Proven ability to deliver high quality software on time and on budget Skilled in a \nvariety of technologies including machine learning d ata analysis and cloud computing Seeking a \nchallenging position as a Machine Learning Engineer  \n \nProfessional Experience  \nABC Company  \nSenior Python Developer 2021  Present  \n \nDeveloped and maintained a scalable and secure API for a leading e commerce platf orm using Python \nDjango and AWS  \nDesigned and implemented a real time recommendation system using collaborative filtering and matrix \nfactorization  \nImproved the accuracy of a fraud detection system by 20% using machine learning algorithms such as \nXGBoos t and Random Forest  \nXYZ Corporation  \nPython Developer 2019  2021  \n \nBuilt and deployed a machine learning pipeline for a customer retention model using Python Scikit \nLearn and AWS  \nAutomated the deployment of data science models into production using Kub ernetes and Docker  \nLed a team of 3 developers to develop a real time chatbot using natural language processing techniques  \nDEF Inc  \nSoftware Engineer 2017  2019    \nWorked on a large scale distributed system for a leading financial services company using P ython and \nSpark  \nDesigned and implemented a data pipeline for ingesting and processing large amounts of financial data \nusing Apache Kafka and Apache Hadoop  \nDeveloped a time series forecasting model for predicting stock prices using Prophet and ARIMA  \nProjects \nImage Recognition using Convolutional Neural Networks  \nBuilt a deep learning model for image recognition using TensorFlow and Keras  \nAchieved 90% accuracy on the CIFAR 10 dataset  \nDeployed the model using AWS Lambda and API Gateway  \nFraud Detection using Graph Analytics  \nDeveloped a graph based algorithm for fraud detection using Neo4j and Python  \nReduced the false positive rate by 30% compared to the previous rule based system  \nVisu alized the graph using D3js and Flask  \nSentiment Analysis using Recurrent Neural Networks  \nBuilt a sentiment analysis model using LSTM and Word2Vec  \nAchieved 85% accuracy on the IMDb dataset  \nDeployed the model using Flask and Docker  \nRecommendation System  using Collaborative Filtering  \nDesigned and implemented a collaborative filtering algorithm for a movie recommendation system  \nImproved the accuracy of the system by 25% compared to the previous model  \nDeployed the model using AWS SageMaker and Lambda  \nEducation  \nMaster of Science in Computer Science XYZ University 2017  \nBachelor of Engineering in Computer Science ABC University 2015  \nSkills  \nProgramming languages Python Java C++  \nMachine learning frameworks Scikit Learn TensorFlow Keras PyTorch   Data processing frameworks Spark Hadoop Kafka  \nCloud computing AWS GCP  \nDatabases SQL MongoDB Neo4j  \nWeb frameworks Django Flask React  ",
              "emails": [
                            "john.smith@email.com"
              ],
              "entities": [
                            "LinkedIn",
                            "Machine Learning Engineer",
                            "ABC Company  \nSenior Python Developer",
                            "API",
                            "Random Forest",
                            "AWS",
                            "Kub",
                            "DEF Inc  \nSoftware",
                            "P",
                            "Spark  \nDesigned",
                            "Convolutional Neural Networks",
                            "Keras",
                            "Recurrent Neural Networks",
                            "Lambda  \nEducation",
                            "Computer Science ABC University",
                            "Scikit Learn TensorFlow Keras PyTorch",
                            "Spark Hadoop Kafka  \nCloud",
                            "GCP"
              ],
              "experience": "Summary  \n Experienced Python developer with a passion for solving complex problems and building scalable and \n efficient systems Proven ability to deliver high quality software on time and on budget Skilled in a \n variety of technologies including machine learning d ata analysis and cloud computing Seeking a \n challenging position as a Machine Learning Engineer  \n \n Professional Experience  \n ABC Company  \n Senior Python Developer 2021   Present  \n \n Developed and maintained a scalable and secure API for a leading e commerce platf orm using Python \n Django and AWS  \n Designed and implemented a real time recommendation system using collaborative filtering and matrix \n factorization  \n Improved the accuracy of a fraud detection system by 20 % using machine learning algorithms such as \n XGBoos t and Random Forest  \n XYZ Corporation  \n Python Developer 2019   2021  \n \n Built and deployed a machine learning pipeline for a customer retention model using Python Scikit \n Learn and AWS  \n Automated the deployment of data science models into production using Kub ernetes and Docker  \n Led a team of 3 developers to develop a real time chatbot using natural language processing techniques  \n DEF Inc  \n Software Engineer 2017   2019    \n Worked on a large scale distributed system for a leading financial services company using P ython and \n Spark  \n Designed and implemented a data pipeline for ingesting and processing large amounts of financial data \n using Apache Kafka and Apache Hadoop  \n Developed a time series forecasting model for predicting stock prices using Prophet and ARIMA  \n Projects \n Image Recognition using Convolutional Neural Networks  \n Built a deep learning model for image recognition using TensorFlow and Keras  \n Achieved 90 % accuracy on the CIFAR 10 dataset  \n Deployed the model using AWS Lambda and API Gateway  \n Fraud Detection using Graph Analytics  \n Developed a graph based algorithm for fraud detection using Neo4j and Python  \n Reduced the false positive rate by 30 % compared to the previous rule based system  \n Visu alized the graph using D3js and Flask  \n Sentiment Analysis using Recurrent Neural Networks  \n Built a sentiment analysis model using LSTM and Word2Vec  \n Achieved 85 % accuracy on the IMDb dataset  \n Deployed the model using Flask and Docker  \n Recommendation System   using Collaborative Filtering  \n Designed and implemented a collaborative filtering algorithm for a movie recommendation system  \n Improved the accuracy of the system by 25 % compared to the previous model  \n Deployed the model using AWS SageMaker and Lambda  \n Education  \n Master of Science in Computer Science XYZ University 2017  \n Bachelor of Engineering in Computer Science ABC University 2015  \n Skills  \n Programming languages Python Java C++  \n Machine learning frameworks Scikit Learn TensorFlow Keras PyTorch    Data processing frameworks Spark Hadoop Kafka  \n Cloud computing AWS GCP  \n Databases SQL MongoDB Neo4j  \n Web frameworks Django Flask React  ",
              "extracted_keywords": [
                            "John",
                            "Smith",
                            "Senior",
                            "Python",
                            "Developer",
                            "Machine",
                            "Learning",
                            "Engineer",
                            "Email",
                            "LinkedIn",
                            "linkedincom",
                            "johnsmith",
                            "Summary",
                            "Experienced",
                            "Python",
                            "developer",
                            "passion",
                            "solving",
                            "complex",
                            "problems",
                            "building",
                            "scalable",
                            "efficient",
                            "systems",
                            "Proven",
                            "ability",
                            "deliver",
                            "high",
                            "quality",
                            "software",
                            "time",
                            "budget",
                            "Skilled",
                            "variety",
                            "technologies",
                            "including",
                            "machine",
                            "learning",
                            "ata",
                            "analysis",
                            "cloud",
                            "computing",
                            "Seeking",
                            "challenging",
                            "position",
                            "Machine",
                            "Learning",
                            "Engineer",
                            "Professional",
                            "Experience",
                            "ABC",
                            "Company",
                            "Senior",
                            "Python",
                            "Developer",
                            "Present",
                            "Developed",
                            "maintained",
                            "scalable",
                            "secure",
                            "API",
                            "leading",
                            "e",
                            "commerce",
                            "platf",
                            "orm",
                            "using",
                            "Python",
                            "Django",
                            "AWS",
                            "Designed",
                            "implemented",
                            "real",
                            "time",
                            "recommendation",
                            "system",
                            "using",
                            "collaborative",
                            "filtering",
                            "matrix",
                            "factorization",
                            "Improved",
                            "accuracy",
                            "fraud",
                            "detection",
                            "system",
                            "%",
                            "using",
                            "machine",
                            "learning",
                            "algorithms",
                            "such",
                            "XGBoos",
                            "t",
                            "Random",
                            "Forest",
                            "XYZ",
                            "Corporation",
                            "Python",
                            "Developer",
                            "Built",
                            "deployed",
                            "machine",
                            "learning",
                            "pipeline",
                            "customer",
                            "retention",
                            "model",
                            "using",
                            "Python",
                            "Scikit",
                            "Learn",
                            "AWS",
                            "Automated",
                            "deployment",
                            "data",
                            "science",
                            "models",
                            "production",
                            "using",
                            "Kub",
                            "ernetes",
                            "Docker",
                            "Led",
                            "team",
                            "developers",
                            "develop",
                            "real",
                            "time",
                            "chatbot",
                            "using",
                            "natural",
                            "language",
                            "processing",
                            "techniques",
                            "DEF",
                            "Inc",
                            "Software",
                            "Engineer",
                            "Worked",
                            "large",
                            "scale",
                            "distributed",
                            "system",
                            "leading",
                            "financial",
                            "services",
                            "company",
                            "using",
                            "P",
                            "ython",
                            "Spark",
                            "Designed",
                            "implemented",
                            "data",
                            "pipeline",
                            "ingesting",
                            "processing",
                            "large",
                            "amounts",
                            "financial",
                            "data",
                            "using",
                            "Apache",
                            "Kafka",
                            "Apache",
                            "Hadoop",
                            "Developed",
                            "time",
                            "series",
                            "forecasting",
                            "model",
                            "predicting",
                            "stock",
                            "prices",
                            "using",
                            "Prophet",
                            "ARIMA",
                            "Projects",
                            "Image",
                            "Recognition",
                            "using",
                            "Convolutional",
                            "Neural",
                            "Networks",
                            "Built",
                            "deep",
                            "learning",
                            "model",
                            "image",
                            "recognition",
                            "using",
                            "TensorFlow",
                            "Keras",
                            "Achieved",
                            "%",
                            "accuracy",
                            "CIFAR",
                            "dataset",
                            "Deployed",
                            "model",
                            "using",
                            "AWS",
                            "Lambda",
                            "API",
                            "Gateway",
                            "Fraud",
                            "Detection",
                            "using",
                            "Graph",
                            "Analytics",
                            "Developed",
                            "graph",
                            "based",
                            "algorithm",
                            "fraud",
                            "detection",
                            "using",
                            "Neo4j",
                            "Python",
                            "Reduced",
                            "false",
                            "positive",
                            "rate",
                            "%",
                            "compared",
                            "previous",
                            "rule",
                            "based",
                            "system",
                            "Visu",
                            "alized",
                            "graph",
                            "using",
                            "D3js",
                            "Flask",
                            "Sentiment",
                            "Analysis",
                            "using",
                            "Recurrent",
                            "Neural",
                            "Networks",
                            "Built",
                            "sentiment",
                            "analysis",
                            "model",
                            "using",
                            "LSTM",
                            "Word2Vec",
                            "Achieved",
                            "%",
                            "accuracy",
                            "IMDb",
                            "dataset",
                            "Deployed",
                            "model",
                            "using",
                            "Flask",
                            "Docker",
                            "Recommendation",
                            "System",
                            "using",
                            "Collaborative",
                            "Filtering",
                            "Designed",
                            "implemented",
                            "collaborative",
                            "filtering",
                            "algorithm",
                            "movie",
                            "recommendation",
                            "system",
                            "Improved",
                            "accuracy",
                            "system",
                            "%",
                            "compared",
                            "previous",
                            "model",
                            "Deployed",
                            "model",
                            "using",
                            "AWS",
                            "SageMaker",
                            "Lambda",
                            "Education",
                            "Master",
                            "Science",
                            "Computer",
                            "Science",
                            "XYZ",
                            "University",
                            "Bachelor",
                            "Engineering",
                            "Computer",
                            "Science",
                            "ABC",
                            "University",
                            "Skills",
                            "Programming",
                            "languages",
                            "Python",
                            "Java",
                            "C++",
                            "Machine",
                            "learning",
                            "frameworks",
                            "Scikit",
                            "Learn",
                            "TensorFlow",
                            "Keras",
                            "PyTorch",
                            "Data",
                            "processing",
                            "frameworks",
                            "Spark",
                            "Hadoop",
                            "Kafka",
                            "Cloud",
                            "computing",
                            "AWS",
                            "GCP",
                            "Databases",
                            "SQL",
                            "MongoDB",
                            "Neo4j",
                            "Web",
                            "frameworks",
                            "Django",
                            "Flask",
                            "React"
              ],
              "keyterms": [
                            [
                                          "Machine Learning Engineer",
                                          0.44942009762319735
                            ],
                            [
                                          "Python developer",
                                          0.06738810261136297
                            ],
                            [
                                          "Senior Python",
                                          0.05219420826937461
                            ],
                            [
                                          "real time",
                                          0.01973615670960272
                            ],
                            [
                                          "system",
                                          0.017814952730591152
                            ],
                            [
                                          "fraud detection",
                                          0.01706483623643781
                            ],
                            [
                                          "recommendation system",
                                          0.01696833886978232
                            ],
                            [
                                          "model",
                                          0.012735073162040434
                            ],
                            [
                                          "AWS",
                                          0.011804809666125186
                            ],
                            [
                                          "machine",
                                          0.011536117601947764
                            ],
                            [
                                          "accuracy",
                                          0.008222725918980236
                            ],
                            [
                                          "analysis",
                                          0.008057044543782917
                            ],
                            [
                                          "scalable",
                                          0.00793948184108764
                            ],
                            [
                                          "api",
                                          0.007569205538063541
                            ],
                            [
                                          "computing",
                                          0.0075041427657840856
                            ],
                            [
                                          "ABC",
                                          0.0068496244147668185
                            ],
                            [
                                          "algorithm",
                                          0.006761658910361946
                            ],
                            [
                                          "Neural Networks",
                                          0.006748134375134239
                            ],
                            [
                                          "learning",
                                          0.006092506033263204
                            ],
                            [
                                          "Django",
                                          0.006038019267299147
                            ]
              ],
              "name": [
                            "John Smith"
              ],
              "phones": [],
              "pos_frequencies": {
                            "ADJ": 24,
                            "ADP": 35,
                            "CCONJ": 27,
                            "DET": 34,
                            "NOUN": 106,
                            "NUM": 14,
                            "PART": 2,
                            "PROPN": 133,
                            "SPACE": 62,
                            "SYM": 2,
                            "VERB": 68,
                            "X": 1
              },
              "resume_data": "John Smith  \nSenior Python Developer and Machine Learning Engineer  \n \nEmail: john.smith@email.com  \nLinkedIn: linkedin.com/in/johnsmith  \n \nSummary  \nExperienced Python developer with a passion for solving complex problems and building scalable and \nefficient systems. Proven ability to deliver high -quality software on time and on budget. Skilled in a \nvariety of technologies, including machine learning, d ata analysis, and cloud computing. Seeking a \nchallenging position as a Machine Learning Engineer.  \n \nProfessional Experience  \nABC Company  \nSenior Python Developer, 2021 - Present  \n \nDeveloped and maintained a scalable and secure API for a leading e -commerce platf orm using Python, \nDjango, and AWS.  \nDesigned and implemented a real -time recommendation system using collaborative filtering and matrix \nfactorization.  \nImproved the accuracy of a fraud detection system by 20% using machine learning algorithms such as \nXGBoos t and Random Forest.  \nXYZ Corporation  \nPython Developer, 2019 - 2021  \n \nBuilt and deployed a machine learning pipeline for a customer retention model using Python, Scikit -\nLearn, and AWS.  \nAutomated the deployment of data science models into production using Kub ernetes and Docker.  \nLed a team of 3 developers to develop a real -time chatbot using natural language processing techniques.  \nDEF Inc.  \nSoftware Engineer, 2017 - 2019    \nWorked on a large -scale distributed system for a leading financial services company using P ython and \nSpark.  \nDesigned and implemented a data pipeline for ingesting and processing large amounts of financial data \nusing Apache Kafka and Apache Hadoop.  \nDeveloped a time -series forecasting model for predicting stock prices using Prophet and ARIMA.  \nProjects \nImage Recognition using Convolutional Neural Networks  \nBuilt a deep learning model for image recognition using TensorFlow and Keras.  \nAchieved 90% accuracy on the CIFAR -10 dataset.  \nDeployed the model using AWS Lambda and API Gateway.  \nFraud Detection using Graph Analytics  \nDeveloped a graph -based algorithm for fraud detection using Neo4j and Python.  \nReduced the false positive rate by 30% compared to the previous rule -based system.  \nVisu alized the graph using D3.js and Flask.  \nSentiment Analysis using Recurrent Neural Networks  \nBuilt a sentiment analysis model using LSTM and Word2Vec.  \nAchieved 85% accuracy on the IMDb dataset.  \nDeployed the model using Flask and Docker.  \nRecommendation System  using Collaborative Filtering  \nDesigned and implemented a collaborative filtering algorithm for a movie recommendation system.  \nImproved the accuracy of the system by 25% compared to the previous model.  \nDeployed the model using AWS SageMaker and Lambda.  \nEducation  \nMaster of Science in Computer Science, XYZ University, 2017  \nBachelor of Engineering in Computer Science, ABC University, 2015  \nSkills  \nProgramming languages: Python, Java, C++  \nMachine learning frameworks: Scikit -Learn, TensorFlow, Keras, PyTorch   Data processing frameworks: Spark, Hadoop, Kafka  \nCloud computing: AWS, GCP  \nDatabases: SQL, MongoDB, Neo4j  \nWeb frameworks: Django, Flask, React  ",
              "tri_grams": "[Senior Python Developer, Developer and Machine, Machine Learning Engineer, Experienced Python developer, passion for solving, solving complex problems, problems and building, efficient systems Proven, systems Proven ability, ability to deliver, deliver high quality, high quality software, software on time, variety of technologies, technologies including machine, including machine learning, machine learning d, learning d ata, d ata analysis, analysis and cloud, cloud computing Seeking, Machine Learning Engineer, Senior Python Developer, Developed and maintained, maintained a scalable, scalable and secure, leading e commerce, e commerce platf, commerce platf orm, orm using Python, Django and AWS, Designed and implemented, implemented a real, real time recommendation, time recommendation system, system using collaborative, filtering and matrix, Improved the accuracy, fraud detection system, machine learning algorithms, t and Random, Built and deployed, deployed a machine, machine learning pipeline, customer retention model, model using Python, Learn and AWS, Automated the deployment, deployment of data, data science models, models into production, production using Kub, ernetes and Docker, Led a team, developers to develop, develop a real, real time chatbot, chatbot using natural, natural language processing, language processing techniques, large scale distributed, scale distributed system, leading financial services, financial services company, company using P, Designed and implemented, implemented a data, pipeline for ingesting, ingesting and processing, processing large amounts, amounts of financial, Kafka and Apache, Developed a time, time series forecasting, series forecasting model, model for predicting, predicting stock prices, prices using Prophet, Prophet and ARIMA, Recognition using Convolutional, Convolutional Neural Networks, Built a deep, deep learning model, model for image, recognition using TensorFlow, TensorFlow and Keras, Deployed the model, model using AWS, Lambda and API, Detection using Graph, Developed a graph, graph based algorithm, algorithm for fraud, detection using Neo4j, Neo4j and Python, Reduced the false, false positive rate, previous rule based, rule based system, alized the graph, graph using D3js, D3js and Flask, Analysis using Recurrent, Recurrent Neural Networks, Built a sentiment, sentiment analysis model, model using LSTM, LSTM and Word2Vec, Deployed the model, model using Flask, Flask and Docker, Designed and implemented, implemented a collaborative, collaborative filtering algorithm, movie recommendation system, Improved the accuracy, Deployed the model, model using AWS, SageMaker and Lambda, Master of Science, Science in Computer, Computer Science XYZ, Science XYZ University, Bachelor of Engineering, Engineering in Computer, Computer Science ABC, Science ABC University, Programming languages Python, languages Python Java, Python Java C++, Machine learning frameworks, learning frameworks Scikit, frameworks Scikit Learn, Scikit Learn TensorFlow, Learn TensorFlow Keras, TensorFlow Keras PyTorch, Data processing frameworks, processing frameworks Spark, frameworks Spark Hadoop, Spark Hadoop Kafka, Cloud computing AWS, computing AWS GCP, Databases SQL MongoDB, SQL MongoDB Neo4j, Web frameworks Django, frameworks Django Flask, Django Flask React]",
              "unique_id": "e871fd8d-2097-4804-aa34-004397005e29",
              "years": []
}